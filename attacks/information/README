infos on windows VM layout:

0x0100 0000 --		stack
0x01b0 0000		heap
0x5000 0000
0x7500 0000 ++		code
0x7c00 0000
0x8000 0000 ++		kernel space

=======================================================================

remote-ps and snarf-sshkey will only work, if the target system is an
IA32 linux with a 3G1G addresslayout: 3G userspace, 1G kernelspace:
	kernelconfig: 
		!CONFIG_HIGHMEM64G (not tested)
		one of:
			* CONFIG_NOHIGHMEM (will work, not required)
			* CONFIG_HIGHMEM4G (will work, not required)
		CONFIG_VMSPLIT_3G (must have)
		thus CONFIG_PAGE_OFFSET = 0xC0000000
		thus PAGE_OFFSET = 0xC0000000

this is a typical config for ia32 desktop, laptop and most server
systems. kernel-2.6.18.1 has been tested. kernel-2.4 has NOT been
tested but should work. other 2.6 kernels should work, as well.

=======================================================================

debug-sshkey.c
	dump all parameters of an existing ssh private key. used for
	debugging only.

proc_info.c
	contains functions that resolve the following from a virtual
	address space:
		process binary name
		arguments of process
		environment of process

remote-ps.c
	will try to find all processes on a given system that is
	connected via firewire. give the target number as argument. to
	find this number (0...CSR), use e.g. 1394csrtool.

snarf-sshkey.c
	this will search for ssh-agent processes and dump all private
	keys it can find in an immediately usable format (!).Â again,
	give target number of machine on firewirebus as argument. to
	find target number (0...CSR), use e.g. 1394csrtool.

	as parameter, -t may be given to test the obtained keys
	for validity on the fly. this may take up to several seconds
	per key, depending on key length and type.

ssh-authfile.c
	contains functions to load and save private keys from/to files

sshkey-sanitychecks.c
	contains functions to check RSA and DSA keys for obvious errors

term.h
	some DEFINE's to create colorized output

=======================================================================

